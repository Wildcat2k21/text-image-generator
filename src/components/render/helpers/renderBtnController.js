import { getRenderOptions } from "../../../helpers/getOptions";

export function RenderBtnController(btnElement, renderController, startRenderCallback = () =>{}){
    const eventCallback = async ({ target }) => {
        const renderOptions = getRenderOptions(this);
        if(!target.pauseFlag){
            target.textContent = "–ü–∞—É–∑–∞ ‚è≥";
            target.style.backgroundColor = "#ffdf31";
    
            // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä —Ä–µ–Ω–¥–µ—Ä–∞
            if(!renderController.renderIsStarted){
                startRenderCallback(renderOptions);
                await renderController.init();
                renderController.startRender(renderOptions).then(() => {
                    confirm("–†–µ–Ω–¥–µ—Ä –±—ã–ª –∑–∞–≤–µ—Ä—à–µ–Ω ‚ÑπÔ∏è");
                    target.textContent = "–°–æ–∑–¥–∞—Ç—å –¥–∞—Ç–∞—Å–µ—Ç";
                    target.style.backgroundColor = "#98e674";
                    target.pauseFlag = false;
                });
            }
            // –í–æ–∑–æ–±–Ω–æ–≤–ª—è–µ–º —Ä–µ–Ω–¥–µ—Ä
            else {
                renderController.resumeRender();
            }
        }
        // –ü–∞—É–∑–∞
        else{
            target.textContent = "–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å üöÄ";
            target.style.backgroundColor = "#65e1f5";
            renderController.pauseRender();
        }
                    
        // –ü–µ—Ä–µ–∫–ª—é—á–∞–µ–º —Ñ–ª–∞–≥ –∫–Ω–æ–ø–∫–∏
        target.pauseFlag = !target.pauseFlag;
    };

    btnElement.addEventListener("click", eventCallback);
};